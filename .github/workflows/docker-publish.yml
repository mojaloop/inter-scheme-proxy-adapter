name: Docker Publish

on:
  push:
    tags: [ 'v*' ] # todo: clarify, why it doesn't work with release (only snapshot)

jobs:
  lint-and-test:
    uses: mojaloop/inter-scheme-proxy-adapter/.github/workflows/main.yml@main

  build-and-push-image:
    needs: lint-and-test
    # todo: clarify why lint-and-test job runs twice!
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: actions/setup-node@v3
        with:
          node-version: 20
          cache: 'npm'

      - name: Setup Git
        run: |
          git config user.name "GitHub Actions"
          git config user.email "gitactions@example.com"

      - run: npm ci

      - name: Build
        shell: bash
        run: npm run build

      - name: Build image
        run: docker build . --file Dockerfile --tag ${GITHUB_REPOSITORY#*/}

      - name: Log into GitHub Container Registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login https://ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Push image to GitHub Container Registry
        run: |
          IMAGE_ID=ghcr.io/${{ github.repository_owner }}/${GITHUB_REPOSITORY#*/}

          # Change all uppercase to lowercase
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')

          # Strip git ref prefix from version
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')

          # Strip "v" prefix from tag name
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')

          # Use Docker `latest` tag convention
          [ "$VERSION" == "master" ] && VERSION=latest

          echo IMAGE_ID=$IMAGE_ID
          echo VERSION=$VERSION

          docker tag ${GITHUB_REPOSITORY#*/} $IMAGE_ID:$VERSION
          docker push $IMAGE_ID:$VERSION
